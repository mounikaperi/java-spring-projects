What is Lower Bound?
--------------------
- Lower Bound algorithm finds the first or the smallest index in sorted array where the value at that index is greater than or equal to the given key
- The lower bound is the smallest index, ind where arr[ind] >= x
- If any such index is not found, the lower bound algorithm returns the size of the array

Brute Force Approach:
--------------------
- Traverse the array from start to end. During this traversal, each element will be compared with the target value x.
- The index i, where the condition arr[i] >=x is first satisfied, the index will be returned
Complexity analysis
- O(n) - time
- O(1) - space (as there is no extra space)

Optimal Approach
----------------
- As the array is sorted, we will apply the Binary Search algorithm to find the index.
- Declare 2 pointers and an 'ans' variable initialized to size of the array( if no index return size)
- low will be first index, high will be last index
- calculate the mid 
- if arr[mid] >= x -> This condition means the the index mid may be the answer. So, we will update the 'ans'
	variable with mid and then start searching in the left half if there is any smaller index that satisfies
	the same condition. Eliminate right half
- if arr[mid] < x -> In this case, mid cannot be our answer. We need to find the bigger index. Eliminate left half
	and search in the right half
Complexity analysis:
O(logN) where N is size of array
O(1) no extra space